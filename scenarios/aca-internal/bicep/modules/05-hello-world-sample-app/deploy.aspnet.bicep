targetScope = 'resourceGroup'

// ------------------
//    PARAMETERS
// ------------------

@description('The location where the resources will be created. This needs to be the same region as the Azure Container Apps instances.')
param location string = resourceGroup().location

@description('Optional. The tags to be assigned to the created resources.')
param tags object = {}

@description('Optional. The name of the Container App. If set, it overrides the name generated by the template.')
@minLength(2)
@maxLength(32)
param containerAppName string = 'aspnetapp'

//@description('The resource ID of the existing user-assigned managed identity to be assigned to the Container App to be able to pull images from the container registry.')
//param containerRegistryUserAssignedIdentityId string

@description('The resource ID of the existing Container Apps environment in which the Container App will be deployed.')
param containerAppsEnvironmentId string

@description('Optional. The address of the registry login server for the container app. If set, it overrides the Microsoft Container Registry.')
param registryLoginServer string = 'mcr.microsoft.com'

param appConfigurationStoreEndpoint string
param appConfigurationStoreUserAssignedIdentityId string
param appConfigurationStoreUserAssignedIdentityClientId string


// ------------------
// RESOURCES
// ------------------

@description('The Container App.')
resource containerApp 'Microsoft.App/containerApps@2023-05-01' = {
  name: containerAppName
  location: location
  tags: tags
  identity: {
    type: 'UserAssigned'
    userAssignedIdentities: {
//      '${containerRegistryUserAssignedIdentityId}': {}
      '${appConfigurationStoreUserAssignedIdentityId}': {}
    }
  }
  properties: {
    configuration: {
      activeRevisionsMode: 'single'
      ingress: {
        allowInsecure: false
        external: true
        targetPort: 8080
        transport: 'auto'
      }
      registries: [
//        {
//          identity: containerRegistryUserAssignedIdentityId
//          server: registryLoginServer
//        }
      ]
      secrets: [
        {
          name: 'endpoints--appconfiguration'
          value: appConfigurationStoreEndpoint
        }
        {
          name: 'azure-client-id'
          value: appConfigurationStoreUserAssignedIdentityClientId
        }
      ]
    }
    environmentId: containerAppsEnvironmentId
    workloadProfileName: 'Consumption'
    template: {
      containers: [
        {
          name: 'aspnet'
          image: '${registryLoginServer}/aspnetapp:v1'
          resources: {
            cpu: json('0.25')
            memory: '0.5Gi'
          }
          env: [
            {
              name: 'Endpoints__AppConfiguration'
              secretRef: 'endpoints--appconfiguration'
            }
            {
              name: 'AZURE_CLIENT_ID'
              secretRef: 'azure-client-id'
            }
          ]
        }
      ]
      scale: {
        minReplicas: 1
        maxReplicas: 10
      }
      volumes: []
    }
  }
}

// ------------------
// OUTPUTS
// ------------------

@description('The FQDN of the Container App.')
output aspnetappFqdn string = containerApp.properties.configuration.ingress.fqdn
